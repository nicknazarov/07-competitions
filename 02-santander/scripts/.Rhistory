install.packages("drat", repos="https://cran.rstudio.com")
drat:::addRepo("dmlc")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type = "source")
drat:::addRepo("dmlc")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type = "source")
install.packages("magrittr")
install.packages("data.table")
install.packages("stringr")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type = "source")
install.packages("pander")
install.packages("DT")
install.packages("XLConnect")
install.packages("XLConnectJarsâ€™")
install.packages("XLConnect", dependencies = TRUE)
install.packages("XLConnect")
install.packages("rJava")
install.packages("XLConnect")
install.packages("rJava")
install.packages("XLConnect")
install.packages("XLConnect", dependencies = TRUE)
install.packages("XLConnect", dependencies = TRUE)
install.packages("shiny", dependencies = TRUE)
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
temp <- readRDS("/home/nick/01-projects/01-sputnik/task_14 (changes in quality_stability)/results/quality_stability_07_03_2016.RDS")
qd_1 <-temp[[1]]
qd_2 <-temp[[1]]
q_1 <-temp[[2]]
View(q_1)
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
library('randomForest')
library('ggplot2')
library('caret')
library('e1071')
library('pROC')
library('Matrix')
library('xgboost')
library('doMC')
modelLookup("xgbTree")
rm(list=ls())
#setwd("/home/nazarov/07-competitions/02/scripts/")
setwd("/home/nick/01-projects/07-competitions/02/scripts/")
source("lib_func.R")
pred <- read.csv('xgboost_rf_9_1.csv')
View(pred)
order(pred[,2])
order(pred[,2])/ nrow(pred)
submission <- data.frame(ID = x_raw$test$ID, TARGET = order(pred[,2])/ nrow(pred))
write.csv(submission, 'xgboost_rank.csv', row.names=FALSE, quote = FALSE)
submission <- data.frame(ID = pred[,1] TARGET = order(pred[,2])/ nrow(pred))
submission <- data.frame(ID = pred[,1], TARGET = order(pred[,2])/ nrow(pred))
write.csv(submission, 'xgboost_rank.csv', row.names=FALSE, quote = FALSE)
