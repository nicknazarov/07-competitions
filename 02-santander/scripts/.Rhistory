install.packages("drat", repos="https://cran.rstudio.com")
drat:::addRepo("dmlc")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type = "source")
drat:::addRepo("dmlc")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type = "source")
install.packages("magrittr")
install.packages("data.table")
install.packages("stringr")
install.packages("xgboost", repos="http://dmlc.ml/drat/", type = "source")
install.packages("pander")
install.packages("DT")
install.packages("XLConnect")
install.packages("XLConnectJarsâ€™")
install.packages("XLConnect", dependencies = TRUE)
install.packages("XLConnect")
install.packages("rJava")
install.packages("XLConnect")
install.packages("rJava")
install.packages("XLConnect")
install.packages("XLConnect", dependencies = TRUE)
install.packages("XLConnect", dependencies = TRUE)
install.packages("shiny", dependencies = TRUE)
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
temp <- readRDS("/home/nick/01-projects/01-sputnik/task_14 (changes in quality_stability)/results/quality_stability_07_03_2016.RDS")
qd_1 <-temp[[1]]
qd_2 <-temp[[1]]
q_1 <-temp[[2]]
View(q_1)
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
shiny::runApp('01-projects/01-sputnik/task_14 (changes in quality_stability)')
library('randomForest')
library('ggplot2')
library('caret')
library('e1071')
library('pROC')
library('Matrix')
library('xgboost')
library('doMC')
modelLookup("xgbTree")
library(dplyr)
library('randomForest')
##############################################################################################
#### Loading data
##############################################################################################
setwd("/home/nick/01-projects/07-competitions/02/scripts/")
load('data/tun_test.RDA')
load('data/tun_train.RDA')
library(dplyr)
library('randomForest')
##############################################################################################
#### Loading data
##############################################################################################
setwd("/home/nick/01-projects/07-competitions/02-santander/scripts/")
load('data/tun_test.RDA')
load('data/tun_train.RDA')
# load in the training data
df_train <- tun_train
setwd("/home/nick/01-projects/07-competitions/02-santander/scripts/")
setwd("/home/nick/01-projects/07-competitions/02-santander/")
load('data/tun_test.RDA')
##############################################################################################
setwd("/home/nick/01-projects/07-competitions/02-santander/scripts")
load('tun_test.RDA')
load('tun_train.RDA')
set.seed(1234)
df_train <- tun_train
df_train$TARGET <- NULL
set.seed(1234)
result <- rfcv(myiris, tun_train$TARGET, cv.fold=3)
result <- rfcv(df_train , tun_train$TARGET, cv.fold=3)
set.seed(647)
myiris <- cbind(iris[1:4], matrix(runif(96 * nrow(iris)), nrow(iris), 96))
result <- rfcv(myiris, iris$Species, cv.fold=3)
with(result, plot(n.var, error.cv, log="x", type="o", lwd=2))
## Not run:
result <- replicate(5, rfcv(myiris, iris$Species), simplify=FALSE)
error.cv <- sapply(result, "[[", "error.cv")
matplot(result[[1]]$n.var, cbind(rowMeans(error.cv), error.cv), type="l",
lwd=c(2, rep(1, ncol(error.cv))), col=1, lty=1, log="x",
xlab="Number of variables", ylab="CV Error")
## End(Not run)
## Not run:
result <- replicate(5, rfcv(myiris, iris$Species), simplify=FALSE)
error.cv <- sapply(result, "[[", "error.cv")
matplot(result[[1]]$n.var, cbind(rowMeans(error.cv), error.cv), type="l",
lwd=c(2, rep(1, ncol(error.cv))), col=1, lty=1, log="x",
xlab="Number of variables", ylab="CV Error")
## End(Not run)
